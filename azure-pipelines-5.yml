trigger: none

pool: 'Initial Pool'

variables: 
  workDir: '$(System.DefaultWorkingDirectory)/VM_Three-Tier_Automation /Infra-Dev'


stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: Initialize_Infra
        displayName: 'Initialize Infra'
        steps:
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTask@4
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(workDir)'
            backendServiceArm: 'redo_ADO'
            backendAzureRmResourceGroupName: 'RG_SP'
            backendAzureRmStorageAccountName: 'stgsp'
            backendAzureRmContainerName: 'contsp'
            backendAzureRmKey: 'QA.tfstate'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'custom'
            workingDirectory: '$(workDir)'
            outputTo: 'console'
            customCommand: 'fmt'
            environmentServiceNameAzureRM: 'redo_ADO'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: '$(workDir)'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(workDir)'
            environmentServiceNameAzureRM: 'redo_ADO'
  - stage: Scan
    displayName: 'Scan'
    dependsOn: Build
    jobs:
      - job:
        displayName: 'Scan_Configs'
        dependsOn: 'Initialize_Infra'
        steps:
        - task: tfsec@1
          inputs:
            version: 'v1.26.0'
            dir: '$(workDir)'
        - script: |
            Invoke-WebRequest -Uri "https://github.com/terraform-linters/tflint/releases/latest/download/tflint_windows_amd64.zip" -OutFile "tflint.zip"
            Expand-Archive -Path "tflint.zip" -DestinationPath "." -Force
            Remove-Item "tflint.zip"
            .\tflint.exe --chdir="$(workDir)"
          displayName: 'Run TFLint'
          pwsh: true

        # Run Checkov
        - script: |
            pip install --quiet checkov
            checkov -d "$(workDir)"
          displayName: 'Run Checkov'
          pwsh: true

  - stage: 
    displayName: "Deployment"
    dependsOn: "Build"
    jobs:
      - job: 
        displayName: 'Apply_Infra'
        steps:
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(workDir)'
            backendServiceArm: 'redo_ADO'
            backendAzureRmResourceGroupName: 'RG_SP'
            backendAzureRmStorageAccountName: 'stgsp'
            backendAzureRmContainerName: 'contsp'
            backendAzureRmKey: 'QA.tfstate'
        - task: ManualValidation@1
          inputs:
            notifyUsers: 'bhavyabharti072@gmail.com'
            approvers: 'bhavyabharti072@gmail.com'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(workDir)'
            environmentServiceNameAzureRM: 'redo_ADO'


            
        
