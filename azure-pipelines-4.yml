trigger: 
  - feature01_GG

pool: 'Initial Pool'

variables:
  workDir: '$(System.DefaultWorkingDirectory)/VM_Three-Tier_Automation/Infra-Dev'

stages:
- stage: build
  displayName: "Building Dev Infra"
  jobs:
    - job: 
      displayName: 'Terraform Build'
      steps:
      - task: TerraformInstaller@1
        displayName: 'Terraform Installer'
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTask@4
        displayName: 'Terraform Init'
        condition: succeeded()
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(workDir)'
          backendServiceArm: 'redo_ADO'
          backendAzureRmResourceGroupName: 'RG_SP'
          backendAzureRmStorageAccountName: 'stgsp'
          backendAzureRmContainerName: 'contsp'
          backendAzureRmKey: 'dev02.tfstate'

- stage: test
  displayName: 'Code Testing'
  jobs:
    - job: 
      displayName: 'Code Testing'
      steps:
      - task: TerraformInstaller@1
        displayName: 'Terraform Installer'
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTask@4
        displayName: 'Terraform Init'
        condition: succeeded()
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(workDir)'
          backendServiceArm: 'redo_ADO'
          backendAzureRmResourceGroupName: 'RG_SP'
          backendAzureRmStorageAccountName: 'stgsp'
          backendAzureRmContainerName: 'contsp'
          backendAzureRmKey: 'dev02.tfstate'
      - task: TerraformTask@5
        displayName: 'Terraform Validate'
        inputs:
          provider: 'azurerm'
          command: 'validate'
          workingDirectory: '$(workDir)'
      - task: TerraformTask@5
        displayName: 'Terraform Fmt'
        inputs:
          provider: 'azurerm'
          command: 'custom'
          workingDirectory: '$(workDir)'
          outputTo: 'console'
          customCommand: 'fmt'
          environmentServiceNameAzureRM: 'redo_ADO'
      
- stage: deploy
  displayName: 'Deployment Plan'
  jobs:
    - job: 
      displayName: 'Infra Deployment Plan'
      steps:
      - task: TerraformInstaller@1
        displayName: 'Terraform Installer'
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTask@4
        displayName: 'Terraform Init'
        condition: succeeded()
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(workDir)'
          backendServiceArm: 'redo_ADO'
          backendAzureRmResourceGroupName: 'RG_SP'
          backendAzureRmStorageAccountName: 'stgsp'
          backendAzureRmContainerName: 'contsp'
          backendAzureRmKey: 'dev02.tfstate'
      - task: TerraformTask@5
        displayName: 'Terraform Plan'
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(workDir)'
          environmentServiceNameAzureRM: 'redo_ADO'